package lab02;

import java.io.FileNotFoundException;
import java.io.FileReader;
import java.util.Scanner;

public class InsertionSort {
	
	static int sizeOfTheArrayOfInputs = 0;
	

	public void sortAnArray(String inputAddressFile) throws FileNotFoundException{
		Scanner inputFile = new Scanner(new FileReader(inputAddressFile));
		
		// Calls the function to discover how many elements are in the file of inputs
		getHowManyElementsOnTheInputsFile(inputAddressFile);
				
		// Creates an array with the right size and inserts all the elements from the file into the array of inputs
		int[] arrayOfInputs = new int[sizeOfTheArrayOfInputs];
		for(int iteratorNumber = 0; iteratorNumber < sizeOfTheArrayOfInputs; iteratorNumber++){
			arrayOfInputs[iteratorNumber] = inputFile.nextInt();
		}
		
		System.out.println("UNSORTED")
		System.out.println(arrayOfInputs[0]);
		System.out.println(arrayOfInputs[1]);
		System.out.println(arrayOfInputs[2]);
		System.out.println(arrayOfInputs[3]);
		System.out.println(arrayOfInputs[4]);
		System.out.println(arrayOfInputs[5]);
		System.out.println("-----------")
		
		int key = 0;
		int j = 1;
		int i = 0;
		for(j = 1; j < 6; j++){
			key = arrayOfInputs[j];
			i = j - 1;
			while((i > 0) && (arrayOfInputs[i] > key)){
				arrayOfInputs[i+1] = arrayOfInputs[i];
				i = i - 1;
			}
			arrayOfInputs[i+1] = key;
		}
		
		System.out.println(arrayOfInputs[0]);
		System.out.println(arrayOfInputs[1]);
		System.out.println(arrayOfInputs[2]);
		System.out.println(arrayOfInputs[3]);
		System.out.println(arrayOfInputs[4]);
		System.out.println(arrayOfInputs[5]);
		
		/*
		 *  For the first data set the inside while loop is executed 0 times and for the
		 *  second data set the inside while loop is executed 10 times because it needs to
		 *  rearrange all the elements of the array
		 */
	}
	
	private static int getHowManyElementsOnTheInputsFile(String inputAddressFile) throws FileNotFoundException{
		Scanner inputFile = new Scanner(new FileReader(inputAddressFile));
		while(inputFile.hasNextInt()){
			sizeOfTheArrayOfInputs++;
			inputFile.nextInt();
		}
		inputFile.close();
		return sizeOfTheArrayOfInputs;
	}
}