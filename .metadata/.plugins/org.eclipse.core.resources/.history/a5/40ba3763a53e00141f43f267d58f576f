package lab04;

public class HeapSort {
	
	int heapSize;
	
	public void heapSort(int[] A){
		buildMaxHeap(A);
		for(int i = heapSize; i > 0; i--){
			swap(A, 0, i);
			heapSize = heapSize - 1;
			maxHeapify(A, 0);
		}
	}
	
	public void buildMaxHeap(int[] A){
		heapSize = A.length - 1;
		for(int i = (heapSize/2); i >= 0; i--){
			maxHeapify(A, i);
		}
		
		
	}
	
	public void maxHeapify(int[] A, int i){
		int l = 0;
		int r = 0;
		int largest;
		if((l <= heapSize) && (A[l] > A[i])){
			largest = l;
		} else {
			largest = i; 
		}
		if((r <= heapSize) && (A[r] > A[largest])){
			largest = r;
		}
		if(largest != i){
			swap(A, A[i], A[largest]);
			maxHeapify(A, largest);
		}
	}
	
	public void swap(int[] A, int firstElement, int secondElement){
		int tempNumber = A[firstElement];
		A[firstElement] = A[secondElement];
		A[secondElement] = tempNumber;
	}

}
