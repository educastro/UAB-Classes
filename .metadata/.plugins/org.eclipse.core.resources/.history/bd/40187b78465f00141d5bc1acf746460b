package lab09;

import java.io.FileNotFoundException;
import java.io.FileReader;
import java.util.Scanner;

public class RBTreeTestHW {

	public static void main(String[] args) throws FileNotFoundException {
		// Gets the input file address and stores into a Scanner instance. Each position is one file.
		String inputAddressFile = "/Users/educastro/Documents/programming/java/workspace/CS303/lab09/src/lab09/inputTest.txt";
		Scanner inputFile = new Scanner(new FileReader(inputAddressFile));
		
		// Calls the function to discover how many elements are in the file of inputs
		int sizeOfTheArrayOfInputs = getHowManyElementsOnTheInputsFile(inputAddressFile);

		// Creates an array with the right size and inserts all the elements from the file into the array of inputs
		int[] arrayOfInputs = new int[sizeOfTheArrayOfInputs];
			
		for(int iteratorNumber = 0; iteratorNumber < sizeOfTheArrayOfInputs; iteratorNumber++){
			arrayOfInputs[iteratorNumber] = inputFile.nextInt();
			inputFile.nextLine();
		}

		// Close the Scanner instance
		inputFile.reset();
		inputFile.close();
		
		System.out.println(arrayOfInputs[0]);
		System.out.println(arrayOfInputs[1]);
		System.out.println(arrayOfInputs[2]);
		System.out.println(arrayOfInputs[3]);
		System.out.println(arrayOfInputs[4]);
		


	}
	
	// Calculates how many elements there are at the inputs file
	private static int getHowManyElementsOnTheInputsFile(String inputAddressFile) throws FileNotFoundException{
		Scanner inputFile = new Scanner(new FileReader(inputAddressFile));

		// Variable that will be incremented for each element at the input file
		int sizeOfTheArrayOfInputs = 0;

		/*
		 *  Everytime that there is a next element then increment the sizeOfTheArrayOfInputs variable
		 *  and goes to the next element
		 */
		while(inputFile.hasNextLine()){
			sizeOfTheArrayOfInputs++;
			inputFile.nextLine();
		}

		// Close the Scanner instance
		inputFile.close();

		// Return how many elements there are in the input file for the creation of the array
		return sizeOfTheArrayOfInputs;
	}

}
